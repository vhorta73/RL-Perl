@startuml

title Active Agent with Active reward

entity External

box "Agent"
  participant ActionInterface 
  participant RewardInterface 
end box

box "Workers"
  participant Selector 
  participant Trainer
  participant Collector
end box

alt ACTIVE
  External          <- ActionInterface : getCurrentStateActions()
  External         --> ActionInterface : ( state, actions )
  ActionInterface   -> Collector : getStateActions( state, actions )
  Collector         -> Collector : getState( state )

  alt In Collector
    Collector   -> Collector : updateActionsAvailable( State, actions )
  else NOT in Collector
    Collector   -> Collector : initialiseState( state, actions )
  end

  ActionInterface    <-- Collector : State
  ActionInterface     -> Selector  : selectAction( State, actions )
  ActionInterface    <-- Selector  : action
  ActionInterface     -> Trainer   : actionSelected( State, action )
  RewardInterface    <-- Trainer
  External            <- RewardInterface : getReward( state, action )
  External           --> RewardInterface : reward
  RewardInterface     -> Trainer   : updateReward( State, action, reward )
  RewardInterface    <-- Trainer   : States
  RewardInterface     -> Collector : updateStates( States )
  External           <-- Collector 
end

@enduml